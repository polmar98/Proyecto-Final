{"version":3,"file":"normalize-sync.js","sourceRoot":"","sources":["../src/normalize-sync.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAE7C,MAAM,UAAU,aAAa,CAAC,KAAqB;IACjD,IAAI,QAAQ,KAAK,OAAM,CAAC,KAAK,CAAC,EAAE;QAC9B,MAAM,IAAI,SAAS,CAAC,wDAAwD,KAAK,GAAG,CAAC,CAAC;KACvF;IAWD,IAAI,CAAC,KAAK,CAAC,MAAM;QAAE,OAAO,KAAK,CAAC;IAEhC,OAAO,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAS,EAAE,EAAE;QAO7C,MAAM,UAAU,GAAG,UAAU,CAAC,IAAI,CAChC,CAAC,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CACtC,CAAC;QAEF,OAAO,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC;IAEpD,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { diacritics } from './diacritics.js';\n\nexport function normalizeSync(input?: string | null): string {\n  if ('string' !== typeof(input)) {\n    throw new TypeError(`Expected 'input' to be of type string, but received '${input}'`);\n  }\n\n  /**\n   * NOTE(motss): Due to the fact that this module should do what we expect it to be - normalize\n   * accents/ diacritics. However, some characters are not accented such as those from\n   * [Latin-1 Supplement](https://bit.ly/2vz1l7m). Also see a relevant\n   * [GH issue](https://bit.ly/2JbAmH0).\n   *\n   * Hence, to match the mental module of the users, `String.prototype.normalize` should not be used\n   * as such.\n   */\n  if (!input.length) return input;\n\n  return input.replace(/(\\S)/g, (_, s: string) => {\n    /**\n     * `lastIndex` will not get reset for each comparison if we are reusing the same RegExp.\n     * Here create a new copy of the RegExp instance before calling `.test()`.\n     *\n     * Issue: {@link https://github.com/motss/normalize-diacritics/issues/112|RegExp lastIndex}\n     */\n    const normalized = diacritics.find(\n      n => new RegExp(n.diacritics).test(s)\n    );\n\n    return normalized == null ? s : normalized.letter;\n    // return null == normalized ? s : normalized.letter;\n  });\n}\n"]}